#!/usr/bin/env ruby
# frozen_string_literal: true

require 'msf/core'

# a custom module
class MetasploitModule < Msf::Auxiliary
  include Msf::Exploit::Remote::Tcp
  include Msf::Auxiliary::Scanner

  def initialize
    super(
      'Name' => 'Custom MS-17-010 scanner',
      'Description' => 'Checks in target is vulnerbale to MS17-010',
      'Author' => 'Solo',
      'License' => MSF_LICENSE
    )

    deregister_options('THREADS', 'RHOSTS')
    register_options(
      [
        OptPort.new('RPORT', [true, 'Target port', 445]),
        OptAddress.new('RHOST', [true, 'Target IP address'])
      ]
    )
  end

  def run
    rhost = datastore['RHOST']
    rport = datastore['RPORT']

    begin
      ms17_010_check(rhost, rport)
    rescue Rex::ConnectionError
      print_error("#{rhost}: Unable to connect to SMB")
    end
  end

  def ms17_010_check(ip, port)
    print_status("Checking #{ip} for MS17-010 vulnerability")
    ms17010 = framework.modules.create('auxiliary/scanner/smb/smb_ms17_010')

    ms17010.datastore['RHOST'] = ip
    ms17010.datastore['RPORT'] = port

    ms17010.run

    if ms17010.datastore['VULNERABLE']
      print_good("#{ip} is vulnerable to MS17-010.")
    else
      print_status("#{ip} is not vulnerable to MS17-010.")
    end
  end
end
