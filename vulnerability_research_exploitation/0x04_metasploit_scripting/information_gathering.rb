#!/usr/bin/env ruby
# frozen_string_literal: true

require 'msf/core'

# a comment
class MetasploitModule < Msf::Post
  def initialize
    super(
      'Name' => 'a',
      'Description' => 'a',
      'License' => MSF_LICENSE,
      'Author' => 'Name',
      'SessionTypes' => ['meterpreter', 'shell']

    )
  end

   def run
    session = client

    print_status("Running information gathering module on session #{datastore['SESSION']}")
    
    gathersysteminfo
    gatheruserinfo
    gathernetworkinfo
    gatherrunningprocesses
  end

  def gathersysteminfo
    print_status("Gathering system information...")
    sysinfo = client.sys.config.sysinfo

    print_good("Computer Name: #{sysinfo['Computer']}\n")
    print_good("OS: #{sysinfo['OS']}\n")
    print_good("Architecture: #{sysinfo['Architecture']}\n")
  end

  def gatheruserinfo
    print_status("Gathering user information...")
    user = client.sys.config.getuid
    print_good("User: #{user}\n")
  end

  def gathernetworkinfo
    print_status("Gathering network information...")
    interfaces = client.net.config.interfaces

    interfaces.each do |iface|
      iface.addrs.each do |addr|
        print_good("Interface: #{iface.name}")
        print_good("  IP Address: #{addr['addr']}")
        print_good("  Netmask: #{addr['netmask']}")
        print_good("  Broadcast: #{addr['bcast']}")
      end
    end
  end

  def gatherrunningprocesses
    print_status("Gathering running processes...")
    processes = client.sys.process.get_processes

    processes.each do |proc|
      print_good("Process Name: #{proc['name']} (PID: #{proc['pid']})")
    end
  end
end
